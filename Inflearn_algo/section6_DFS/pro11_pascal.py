# 파스칼 삼각형의 수열 추측하기
# 3 1 2 4
#  4 3 6
#   7 9
#    16

# 입력 : 4, 16
# 출력 : 3 1 2 4

# 이항계수
# 1 2 3 4
#(1+2),(2+3),(3+4)               ==> 1  이항계수 : 1 1 1
#  (1+2)+(2+3), (2+3)+(3+4)      ==> 1*1 + 2*2 + 3*1 / 2*1+3*2+4*1  ==> 이항계수 : 1 2 1 (2C0, 2C1, 2C2)
#     (1+2)+(2+3)+(2+3)+(3+4) ==> 1*1+ 2*3 + 3*3 + 4*1    ==> 이항계수 : 1 3 3 1  (3C0, 3C1, 3C2, 3C3)

# n이 2일때 ==>  1 2 1  (2C0, 2C1, 2C2)
# n이 3일때 ==> 1 3 3 1  (3C0, 3C1, 3C2, 3C3)
# n이 4일대 ==> 1 4 6 4 1  (4C0, 4C1, 4C2, 4C3, 4C4)


# b[0] b[1] b[2] b[3]
#  1    3     3   1  ==> 저장
#           *
# p[0]  p[1] p[2]  p[3]


import sys
sys.stdin=open("input.txt","r")

n,m=map(int,input().split())

# n에 따른 이항계수 구하기, 1은 고정
b=[1]*n
for i in range(1,n):
    b[i]=b[i-1]*(n-i)//i

# 순열
p=[0]*n
# 중복방지 체크
ch=[0]*(n+1)

# DFS L- 각 단계별 Level, Sum은 각 단계별 합
def dfs(L,sum):
    # DFS 종료 조건
    if L==n and sum==m:
        for x in p:
            print(x,end=" ")
        print()
        sys.exit(0)

    else :
        for i in range(1,n+1):
            if ch[i]==0:
                # 같은 숫자를 못쓰게 하기 위해 체크
                ch[i]=1
                p[L]=i
                dfs(L+1,sum+(p[L]*b[L]))
                # 쓰고 난 후에는 0으로 풀어줌 ==> 다른곳에서 사용하기 위해 D(1)의 2에서 각 숫자들을 사용
                ch[i]=0



dfs(0,0)








